@charset "UTF-8";
/* 1.ventaja podemos importar un fichero (en css tenía que estar en la primera línea), en sass da igual el lugar donde lo pongamos. Hay dos tipos:
                                            -@import'extra.scss' 
                                            -@import'_extra.scss' (nos ahorramos tener un fichero que no queremos para nada el _ hace que no se compile
                                            sería por CUESTIONES DE RENDIMIENTO*/
/*body{
    background: blue;
    margin: 2rem;
}
header h1{
    color: brown;
}

header p{
    font-size: 1.5rem;
}*/
/*se puede escribir css dentro de sass ya que es css lo que va a procesar*/
/*sass es un compilador (un traductor)*/
/*instalacion sass para npm : npm i -g sass*/
/* $fondo: aquamarine; */
/* $fondo2: red;*/
/* $fondo3: $fondo + $fondo2; */
/*$margen1: 20%;
$margen2: 10%;
$margen3: $margen1 + $margen2; */
*,
*::before, *::after,
*:before, *:after {
  box-sizing: border-box;
}

/* $fondo: rgb(255, 145, 102);
$fondo2: rgb(35, 105, 102);
$fondo3: mix ($fondo + $fondo2); */
body {
  background-color: #6dccdd;
  /*  header{
       width: 100%;
       height: 20vh;
       background: white;
       h1{ font-size: 6rem;}
       p{font-size: 1.5rem; color: blue;} nos lo llevamos a header.scss
   } */
}

/*$fondo: aquamarine;
$fondo2: red;
 $fondo3: $fondo + $fondo2; */
/* $margen1: 20%;
$margen2: 10%;
$margen3: $margen1 + $margen2; */
header {
  width: 60%;
  height: 20vh;
  background: blue;
  /* :hover{background: black;}  no se hace así hay que hacer un & (autoreferencia)*/
}
header h1 {
  font-size: 4rem;
  text-align: center;
  padding-top: 1rem;
}
header p {
  font-size: 1.5rem;
  color: blue;
  text-align: center;
  letter-spacing: 0.4rem;
}
header:hover {
  background: blue;
}

main section h2 {
  font-size: 2.5rem;
  margin: 1rem;
}

footer {
  width: 10%;
  height: 6rem;
  background: green;
  /* position: absolute; */
  bottom: 0;
  color: aqua;
}
footer address p:nth-of-type(2) {
  margin: 0.5rem;
  font-size: 1rem;
  color: blue;
}
footer > p {
  font-size: 1.6rem;
  color: red;
}

/* Despues hay que procesarlo, para ello en la consola iremos a la ruta donde este ese fichero style.scss y ponemos: sass +nombre archivo y nos sacará el css por la pantalla(consola)
2-- en la consola : sass style.scss style.css para que cree un archivo que podamos linkar */
/*opcion 2: crear carpeta SCSS + CSS y ejecutar en CMD: sass scss:css y se creará el fichero automático */
/*cada cambio que hacemos tendriamos que volver a compilar, pra evitar esto usaremos un "watcher" para ello en el cmd pondremos: npm init -y  
una vez creado el json encima de texto crearemos un script que sea: "sass":"sass scss:css",      para comprobar que funciona ponemos:npm run sass con esto todavía no estaría creado el watch*/
/* crear json para hacer un script para poder ejecutarlo luego en npm:  "scripts": {
    "sass":"sass scss:css",
    "test": "echo \"Error: no test specified\" && exit 1"
  }, */
/*todavia no esta en esta version de npm: entonces instalamos NODEMON(es un mega watcher que actualiza node) en npm:npm i -g nodemon, para comprobar su instalación : nodemon --version, de NODEMON nos va a interesar desde esta url: https://github.com/remy/nodemon#nodemon para ver que opcion nos interesaria

  Una vez instalado-
  en el json creamos un script:   "scripts": {
    "sass":"sass scss:css",
    "vigilar":"nodemon -e scss -x \"sass scss:css\"",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

  se ejecuta: npm run vigilar

  para ejecutar varios scripts enh npm 

            "start":"parallelshell \"npm run server\" \"npm run vigilar\"",

            para que el servidor se ejecute en todos nuestros proyectos cambiar el script "start":

            "server":"http-server ../",  ->>> ../
            o así : "start":"http-server ..\"",


  */

/*# sourceMappingURL=css/Style.css.map */
